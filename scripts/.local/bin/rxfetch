#!/usr/bin/env bash

# Modified script of Mangeshrex's rxfetch with some code stolen from dylanaraps's pfetch

#colors
#bold="(tput bold)"
magenta="\033[1;35m"
green="\033[1;32m"
white="\033[1;37m"
blue="\033[1;34m"
red="\033[1;31m"
black="\033[1;40;30m"
yellow="\033[1;33m"
cyan="\033[1;36m"
reset="\033[0m"
bgyellow="\033[1;43;33m"
bgwhite="\033[1;47;37m"
c0=${reset}
c1=${magenta}
c2=${green}
c3=${white}
c4=${blue}
c5=${red}
c6=${yellow}
c7=${cyan}
c8=${black}
c9=${bgyellow}
c10=${bgwhite}

# Get the init
get_init() {
	if pidof -q systemd; then
		echo 'systemd'
	elif [ -f '/sbin/openrc' ]; then
		echo 'openrc'
	else
		cut -d ' ' -f 1 /proc/1/comm
	fi
}

# Get count of packages installed

has() {
	_cmd=$(command -v "$1") 2>/dev/null || return 1
	[ -x "$_cmd" ] || return 1
}

get_pkg_count() {
	os="Linux"
	packages=$(
		case $os in
			(Linux*)
				# Commands which print packages one per line.
				has bonsai	 && bonsai list
				has crux	   && pkginfo -i
				has pacman-key && pacman -Qq
				has dpkg	   && dpkg-query -f '.\n' -W
				has rpm		&& rpm -qa
				has xbps-query && xbps-query -l
				has apk		&& apk info
				has guix	   && guix package --list-installed
				has opkg	   && opkg list-installed
				# Directories containing packages.
				has kiss	   && printf '%s\n' /var/db/kiss/installed/*/
				has cpt-list   && printf '%s\n' /var/db/cpt/installed/*/
				has brew	   && printf '%s\n' "$(brew --cellar)/"*
				has emerge	 && printf '%s\n' /var/db/pkg/*/*/
				has pkgtool	&& printf '%s\n' /var/log/packages/*
				has eopkg	  && printf '%s\n' /var/lib/eopkg/package/*
				# 'nix' requires two commands.
				has nix-store  && {
					nix-store -q --requisites /run/current-system/sw
					nix-store -q --requisites ~/.nix-profile
				}
			;;
		esac | wc -l
	)
	packages=${packages#"${packages%%[![:space:]]*}"}
	packages=${packages%"${packages##*[![:space:]]}"}

	echo "$packages"
}

# Get distro name
get_distro_name() {
	awk -F '"' '/PRETTY_NAME/ { print $2 }' /etc/os-release
}

# Get Memory usage
get_mem() {
	free --mega | awk 'NR == 2 { print $3" / "$2" MB" }'
}

# Get DE/WM
# Reference: https://github.com/unixporn/robbb/blob/master/fetcher.sh
get_de_wm() {
	wm="${XDG_CURRENT_DESKTOP#*:}"
	[ "$wm" ] || wm="$DESKTOP_SESSION"

	# for most WMs
	[ ! "$wm" ] && [ "$DISPLAY" ] && command -v xprop >/dev/null && {
		id=$(xprop -root -notype _NET_SUPPORTING_WM_CHECK)
		id=${id##* }
		wm=$(xprop -id "$id" -notype -len 100 -f _NET_WM_NAME 8t | grep '^_NET_WM_NAME' | cut -d\" -f 2)
	}

	# for non-EWMH WMs
	[ ! "$wm" ] || [ "$wm" = "LG3D" ] &&
		wm=$(ps -e | grep -m 1 -o \
			-e "sway" \
			-e "kiwmi" \
			-e "wayfire" \
			-e "sowm" \
			-e "catwm" \
			-e "fvwm" \
			-e "dwm" \
			-e "2bwm" \
			-e "monsterwm" \
			-e "tinywm" \
			-e "xmonad")

	echo ${wm:-unknown}
}

echo -e "               \033[0m"
echo -e "               ${c1}os${c3}     $(get_distro_name) $(uname -m)"
echo -e "               ${c2}ker${c3}    $(uname -r)"
echo -e "     ${c3}•${c8}ﱢ${c3}•${c0}       ${c5}pkgs${c3}   $(get_pkg_count)"
echo -e "     ${c8}${c0}${c9}oo${c0}${c8}|${c0}       ${c4}sh${c3}     ${SHELL##*/}"
echo -e "    ${c8}/${c0}${c10} ${c0}${c8}'\'${c0}      ${c2}de/wm${c3}  $(get_de_wm)"
echo -e "   ${c9}(${c0}${c8}\_;/${c0}${c9})${c0}      ${c1}init${c3}   $(get_init)"
echo -e "               ${c6}ram${c3}    $(get_mem)"
echo -e "               \033[0m"
echo -e "               ${c5} ${c2} ${c6} ${c4} ${c1} ${c7}"
echo -e "               \033[0m"
